WEBVTT

1
00:00:02.976 --> 00:00:04.068
Hi!

2
00:00:04.068 --> 00:00:07.730
We're going to use Bluejay to gain
some experience with filtering and

3
00:00:07.730 --> 00:00:10.110
searching earthquake data.

4
00:00:10.110 --> 00:00:14.320
We'll start with the existing
earthquake client class which reads and

5
00:00:14.320 --> 00:00:16.190
prints quake data.

6
00:00:16.190 --> 00:00:19.800
We can use this class to
print CSV data from either

7
00:00:19.800 --> 00:00:24.360
the live USGS data feed, or
from data we've recorded, so

8
00:00:24.360 --> 00:00:27.850
you can load it from a file on your
computer, rather than over the internet.

9
00:00:28.850 --> 00:00:32.470
Since the data is in CSV format,
you could also copy and

10
00:00:32.470 --> 00:00:36.330
paste this output Into a spreadsheet and
look at it there.

11
00:00:36.330 --> 00:00:40.130
This can help you check and
debug the code you'll write.

12
00:00:40.130 --> 00:00:44.380
This live coding lesson will help
you build experience reading and

13
00:00:44.380 --> 00:00:48.000
searching quake data,
which will use the same techniques and

14
00:00:48.000 --> 00:00:50.480
ideas to search any kinda data.

15
00:00:50.480 --> 00:00:54.290
You'll be able to create new ideas for
filtering data so that you can

16
00:00:54.290 --> 00:00:58.710
search the quake data to find patterns
of simply finding where quakes occur.

17
00:00:59.750 --> 00:01:04.110
You'll see code to filer quake data
by the magnitude of a quake or

18
00:01:04.110 --> 00:01:08.150
by how far quakes are from
a specific location.

19
00:01:08.150 --> 00:01:12.790
You'll also see that using live data can
make it difficult to debug your code since

20
00:01:12.790 --> 00:01:13.855
the data may change.

21
00:01:13.855 --> 00:01:19.400
We;ve captured data you can use to help
debug and you can do that as well.

22
00:01:19.400 --> 00:01:21.385
Let's start the coding now.

23
00:01:21.385 --> 00:01:26.610
First thing we're gonna do is just
process the data using the create CSV

24
00:01:26.610 --> 00:01:28.120
method we've written.

25
00:01:28.120 --> 00:01:32.660
And we can either read data from a file,
which is what we're gonna do first.

26
00:01:32.660 --> 00:01:35.820
Or we could read it from a link.

27
00:01:35.820 --> 00:01:38.363
So let's just go ahead and run createCSV.

28
00:01:41.486 --> 00:01:46.161
So I'm gonna create an object,
and run the createCSV method, and

29
00:01:46.161 --> 00:01:50.754
you'll see it's gonna run, and
it's gonna find from our file,

30
00:01:50.754 --> 00:01:55.951
it's got 1,518 quakes and
it's got information about the quakes.

31
00:02:03.125 --> 00:02:06.972
So you could actually take that data,
and cut and paste it, and

32
00:02:06.972 --> 00:02:10.940
put it into a spreadsheet
because it is in CSV format.

33
00:02:10.940 --> 00:02:14.680
And then that would actually allow you
to look at the data in another way,

34
00:02:14.680 --> 00:02:18.080
and kind of decide if your
program is working correctly.

35
00:02:18.080 --> 00:02:21.070
So we're not gonna do that right now,
but that's something you could do.

36
00:02:21.070 --> 00:02:24.040
So what we want to do now is go ahead and
figure out,

37
00:02:24.040 --> 00:02:26.270
what are the big quakes from that file?

38
00:02:27.870 --> 00:02:32.890
So we're gonna write a method
called big quakes, which

39
00:02:32.890 --> 00:02:38.550
essentially is starting out the same way
that we just started out the other one.

40
00:02:38.550 --> 00:02:43.960
We're going to read in all of those
earthquakes from our data file, and

41
00:02:43.960 --> 00:02:46.910
then we got to figure out
what the big quakes are.

42
00:02:48.210 --> 00:02:49.020
So, let's do that.

43
00:02:53.370 --> 00:02:57.340
So, as you can see what
happens here in our code,

44
00:02:57.340 --> 00:03:02.610
is we have this line here,
ArrayList, quake entry list.

45
00:03:02.610 --> 00:03:06.770
So what we are doing is we are reading
with our parser and putting

46
00:03:06.770 --> 00:03:12.080
all of the earthquakes that we are reading
into an array list of type quake entries.

47
00:03:12.080 --> 00:03:14.856
So we can iterate over those
which is what I'm gonna do now.

48
00:03:22.739 --> 00:03:27.557
So for quake entry we'll just call it QE.

49
00:03:37.634 --> 00:03:41.678
So for each quake entry,
we're gonna have to ask a question and

50
00:03:41.678 --> 00:03:43.750
find out how big that quake was.

51
00:03:45.620 --> 00:03:46.945
So, we'll have an if statement.

52
00:03:46.945 --> 00:03:52.934
[SOUND] And we'll have to get
the magnitude of the quake,

53
00:03:52.934 --> 00:03:57.659
so QE is our quake that's
in our array list.

54
00:03:57.659 --> 00:04:00.794
And so we'll use the method,
get magnitude.

55
00:04:07.329 --> 00:04:08.670
And then we'll compare it.

56
00:04:08.670 --> 00:04:12.194
What I'm gonna do is just ask
if the quake is bigger than 5.0,

57
00:04:12.194 --> 00:04:15.480
I want to know all those quakes
that are bigger than 5.0.

58
00:04:22.426 --> 00:04:24.505
And if it is, I'm gonna print it out.

59
00:04:29.566 --> 00:04:30.970
So I'll just print the quake out.

60
00:04:35.301 --> 00:04:37.730
And let's compile that and
see if it works.

61
00:04:39.870 --> 00:04:41.880
So it compiled no syntax errors.

62
00:04:41.880 --> 00:04:43.840
We'll just go ahead and run it.

63
00:04:43.840 --> 00:04:46.890
So again, we're gonna create a new object.

64
00:04:46.890 --> 00:04:50.538
And this time,
we're gonna run the method bigQuakes and

65
00:04:50.538 --> 00:04:52.516
let's see what the output is.

66
00:04:56.614 --> 00:05:01.837
Okay, so you can see all of these quakes
here have magnitude greater than five.

67
00:05:12.037 --> 00:05:15.850
Now another way we could do this is
we could write a filter for this.

68
00:05:15.850 --> 00:05:19.150
Because what if we wanna get big
quakes and we wanna do other things.

69
00:05:19.150 --> 00:05:22.900
So I'm gonna instead,
I'm gonna do this a different way.

70
00:05:22.900 --> 00:05:27.060
So I'm gonna go up here and
I've already started this method up here.

71
00:05:27.060 --> 00:05:34.710
It's called filter by magnitude and
when I'm passing in our two parameters.

72
00:05:34.710 --> 00:05:38.920
I'm passing in an array list of our
quake data, of quake entries, and

73
00:05:38.920 --> 00:05:43.170
I'm also passing in
a number which is the size.

74
00:05:43.170 --> 00:05:46.000
I want all quakes bigger than that number.

75
00:05:46.000 --> 00:05:46.970
And then what I've done is,

76
00:05:46.970 --> 00:05:50.850
I'd like to create an array
list of all such earthquakes.

77
00:05:51.920 --> 00:05:56.530
So I've created a new array list
here called answer, and what I

78
00:05:56.530 --> 00:06:01.840
want to do is go through the quake data
that we're passing in that array list.

79
00:06:01.840 --> 00:06:07.490
And I want to figure out what are all
those earthquakes bigger than magmen,

80
00:06:07.490 --> 00:06:11.110
which is our number that we're
also passing it as a parameter.

81
00:06:11.110 --> 00:06:12.600
So we'll just add code here.

82
00:06:16.840 --> 00:06:21.040
So again we're gonna create a for loop for

83
00:06:21.040 --> 00:06:29.009
each QuakeEntry From
our parameter quakeData

84
00:06:38.239 --> 00:06:39.922
We're gonna ask the same question.

85
00:06:42.047 --> 00:06:47.450
If qe and
we're gonna use the getMatnitude function.

86
00:06:48.850 --> 00:06:53.590
And here we're gonna see
if it's greater than our

87
00:06:53.590 --> 00:06:59.000
magMin, which is the parameter
we're passing in, the number.

88
00:07:02.010 --> 00:07:07.195
And if it is,
we want an ArrayList of all such quakes.

89
00:07:13.522 --> 00:07:17.546
So if we find a match, we're gonna
add it to the ArrayLIst answer.

90
00:07:17.546 --> 00:07:22.296
So, answer

91
00:07:22.296 --> 00:07:27.523
.add(qe.

92
00:07:27.523 --> 00:07:32.561
And we'll just check and
see if this compiles, and it does.

93
00:07:32.561 --> 00:07:36.274
Now in order to use this new method
we wrote filtered by magnitude,

94
00:07:36.274 --> 00:07:38.609
we'll come back down here to big quakes.

95
00:07:38.609 --> 00:07:43.550
And I'm just gonna comment out this part
that we wrote here cuz we're going to do

96
00:07:43.550 --> 00:07:47.930
it in a different way this time we're
gonna actually use our methods.

97
00:07:47.930 --> 00:07:52.830
I'm just gonna put a big
comment around this and

98
00:07:52.830 --> 00:07:57.200
instead we're gonna write,
we're gonna call.

99
00:07:57.200 --> 00:08:01.040
The method we just wrote, and
that filter will then return

100
00:08:01.040 --> 00:08:04.210
an array list of all of the quakes
that have the large magnitude.

101
00:08:07.800 --> 00:08:12.880
So we're gonna have to create
an array list to receive the answer.

102
00:08:12.880 --> 00:08:17.151
So an array list, of type quake entry

103
00:08:23.037 --> 00:08:26.450
So I'm gonna call this ArrayList listBig.

104
00:08:28.730 --> 00:08:30.610
These are just the big quakes.

105
00:08:33.780 --> 00:08:36.370
And that's gonna equal where
I'm gonna call the method.

106
00:08:36.370 --> 00:08:43.790
So that method is called,
filter by magnitude.

107
00:08:43.790 --> 00:08:47.681
Then we're gonna have to pass it,
the array list of all the quakes,

108
00:08:47.681 --> 00:08:48.995
which is called list.

109
00:08:52.280 --> 00:08:58.537
And we're also gonna have to pass it
A number, so I'm just gonna pass it 5.0

110
00:09:08.336 --> 00:09:10.053
>> So that will give us an array list and

111
00:09:10.053 --> 00:09:13.889
then what we'll have to do is once we get
that array list then we can just print out

112
00:09:13.889 --> 00:09:16.700
the big earthquakes so I'll do that now.

113
00:09:16.700 --> 00:09:20.448
We'll create a for loop just to loop
over that particular array list.

114
00:09:27.935 --> 00:09:35.110
So, for each QuakeEntry qe
that's in the listBig ArrayList,

115
00:09:41.471 --> 00:09:43.073
What we'll do is print these out.

116
00:09:50.585 --> 00:09:55.400
Okay so let's see if this compiles,
and it does.

117
00:09:55.400 --> 00:09:57.108
So we'll go ahead and run this.

118
00:10:03.005 --> 00:10:06.669
So we'll create our object,
and we'll run bigQuakes.

119
00:10:08.210 --> 00:10:08.730
And there it goes.

120
00:10:08.730 --> 00:10:13.140
So again we get all the quakes that
are bigger than five and you can see that.

121
00:10:13.140 --> 00:10:17.060
Now notice we're taking
advantage of two string

122
00:10:17.060 --> 00:10:19.850
which knows how to print
out an earthquake.

123
00:10:19.850 --> 00:10:23.660
It prints it out in this nice format
that's got the location, the magnitude,

124
00:10:23.660 --> 00:10:25.350
the depth, and the title.

125
00:10:25.350 --> 00:10:30.290
And so we're also taking advantage
of using that two string.

126
00:10:30.290 --> 00:10:31.370
Just wanted to point that out.